from heapq import *
import matplotlib.pyplot as plt
import networkx as nx

#считывание графа
G = nx.Graph()
f = open('/Users/Zuka/PycharmProjects/labs_2017/lab5/с', 'r')
v = []
for line in f:
    v1, v2, w = list(line.split())
    if v1 not in v:
        v.append(v1)
    if v2 not in v:
        v.append(v2)
    G.add_edge(v1, v2, weight=int(w))
f.close()
pos = nx.spring_layout(G)
nx.draw_networkx_nodes(G, pos, node_color='r', node_size=100, alpha=0.8)
nx.draw_networkx_edges(G, pos, width=1.0, alpha=0.5)
nx.draw_networkx_labels(G,pos,font_size=12,font_family='Comic Sans MS')

"""def dijkstra(A, start):
    d = [float('+inf') for i in A]
    d[start] = 0
    Q = [(start, 0)]
    visited = set()
    while len(visited) != h:
        current, d_c = heappop(Q)
        if d_c != d[current]:
            continue
        for neighbour in A[current]:
            l = d_c + neighbour[1]
            if l < d[neighbour[0]]:
                d[neighbour[0]] = l
                heappush(Q, (neighbour[0], l))
        visited.add(current)
    return d
"""

#вводить названия вершин, не номера
v1 = input()
nx.draw_networkx_nodes(G, pos, nodelist=[v1], node_color='g', node_size=100, alpha=0.8)
d = nx.single_source_dijkstra_path_length(G,v1)
nx.draw_networkx_labels(G,pos,d,font_size=16,font_color='r',font_family='Comic Sans MS')


plt.axis('off')
plt.savefig("simple_path.png") # сохранить как png файл
plt.show() # вывести на экран